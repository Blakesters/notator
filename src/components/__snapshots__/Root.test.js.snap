// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Root should render without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Root />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header>
          <h1
                    className="title"
          >
                    Sing or Play Into the Microphone and Press Keys to Create Notation
          </h1>
          <h3
                    className="range"
          >
                    The range is F1 – C7
          </h3>
</header>,
        <Connect(AudioButton) />,
        <ReduxForm />,
        <Instructions />,
        <Connect(SheetMusic) />,
      ],
      "className": "Root",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1
              className="title"
>
              Sing or Play Into the Microphone and Press Keys to Create Notation
</h1>,
            <h3
              className="range"
>
              The range is F1 – C7
</h3>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Sing or Play Into the Microphone and Press Keys to Create Notation",
              "className": "title",
            },
            "ref": null,
            "rendered": "Sing or Play Into the Microphone and Press Keys to Create Notation",
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "The range is F1 – C7",
              "className": "range",
            },
            "ref": null,
            "rendered": "The range is F1 – C7",
            "type": "h3",
          },
        ],
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header>
            <h1
                        className="title"
            >
                        Sing or Play Into the Microphone and Press Keys to Create Notation
            </h1>
            <h3
                        className="range"
            >
                        The range is F1 – C7
            </h3>
</header>,
          <Connect(AudioButton) />,
          <ReduxForm />,
          <Instructions />,
          <Connect(SheetMusic) />,
        ],
        "className": "Root",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h1
                className="title"
>
                Sing or Play Into the Microphone and Press Keys to Create Notation
</h1>,
              <h3
                className="range"
>
                The range is F1 – C7
</h3>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Sing or Play Into the Microphone and Press Keys to Create Notation",
                "className": "title",
              },
              "ref": null,
              "rendered": "Sing or Play Into the Microphone and Press Keys to Create Notation",
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "The range is F1 – C7",
                "className": "range",
              },
              "ref": null,
              "rendered": "The range is F1 – C7",
              "type": "h3",
            },
          ],
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
