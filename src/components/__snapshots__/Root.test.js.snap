// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Root should render without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Root />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <div
        className="Root"
>
        <header>
                <h1
                        className="title"
                >
                        <Link
                                replace={false}
                                to="/"
                        >
                                Notator
                        </Link>
                </h1>
        </header>
        <main>
                <Switch>
                        <Route
                                component={[Function]}
                                exact={true}
                                path="/"
                        />
                        <Route
                                component={[Function]}
                                exact={true}
                                path="/login"
                        />
                        <Route
                                component={[Function]}
                                exact={true}
                                path="/signup"
                        />
                </Switch>
        </main>
</div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header>
            <h1
                        className="title"
            >
                        <Link
                                    replace={false}
                                    to="/"
                        >
                                    Notator
                        </Link>
            </h1>
</header>,
          <main>
            <Switch>
                        <Route
                                    component={[Function]}
                                    exact={true}
                                    path="/"
                        />
                        <Route
                                    component={[Function]}
                                    exact={true}
                                    path="/login"
                        />
                        <Route
                                    component={[Function]}
                                    exact={true}
                                    path="/signup"
                        />
            </Switch>
</main>,
        ],
        "className": "Root",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h1
              className="title"
>
              <Link
                            replace={false}
                            to="/"
              >
                            Notator
              </Link>
</h1>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Link
                replace={false}
                to="/"
>
                Notator
</Link>,
              "className": "title",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Notator",
                "replace": false,
                "to": "/",
              },
              "ref": null,
              "rendered": "Notator",
              "type": [Function],
            },
            "type": "h1",
          },
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Switch>
              <Route
                            component={[Function]}
                            exact={true}
                            path="/"
              />
              <Route
                            component={[Function]}
                            exact={true}
                            path="/login"
              />
              <Route
                            component={[Function]}
                            exact={true}
                            path="/signup"
              />
</Switch>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
/>,
                <Route
                  component={[Function]}
                  exact={true}
                  path="/login"
/>,
                <Route
                  component={[Function]}
                  exact={true}
                  path="/signup"
/>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "exact": true,
                  "path": "/",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "exact": true,
                  "path": "/login",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "exact": true,
                  "path": "/signup",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "main",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div
          className="Root"
>
          <header>
                    <h1
                              className="title"
                    >
                              <Link
                                        replace={false}
                                        to="/"
                              >
                                        Notator
                              </Link>
                    </h1>
          </header>
          <main>
                    <Switch>
                              <Route
                                        component={[Function]}
                                        exact={true}
                                        path="/"
                              />
                              <Route
                                        component={[Function]}
                                        exact={true}
                                        path="/login"
                              />
                              <Route
                                        component={[Function]}
                                        exact={true}
                                        path="/signup"
                              />
                    </Switch>
          </main>
</div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <header>
              <h1
                            className="title"
              >
                            <Link
                                          replace={false}
                                          to="/"
                            >
                                          Notator
                            </Link>
              </h1>
</header>,
            <main>
              <Switch>
                            <Route
                                          component={[Function]}
                                          exact={true}
                                          path="/"
                            />
                            <Route
                                          component={[Function]}
                                          exact={true}
                                          path="/login"
                            />
                            <Route
                                          component={[Function]}
                                          exact={true}
                                          path="/signup"
                            />
              </Switch>
</main>,
          ],
          "className": "Root",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <h1
                className="title"
>
                <Link
                                replace={false}
                                to="/"
                >
                                Notator
                </Link>
</h1>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Link
                  replace={false}
                  to="/"
>
                  Notator
</Link>,
                "className": "title",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Notator",
                  "replace": false,
                  "to": "/",
                },
                "ref": null,
                "rendered": "Notator",
                "type": [Function],
              },
              "type": "h1",
            },
            "type": "header",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Switch>
                <Route
                                component={[Function]}
                                exact={true}
                                path="/"
                />
                <Route
                                component={[Function]}
                                exact={true}
                                path="/login"
                />
                <Route
                                component={[Function]}
                                exact={true}
                                path="/signup"
                />
</Switch>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
/>,
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/login"
/>,
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/signup"
/>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "path": "/",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "path": "/login",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "path": "/signup",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": "main",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
